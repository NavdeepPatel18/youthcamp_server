// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id       Int     @id @default(autoincrement())
  name     String  @unique @db.VarChar(255)
  password String?

  Home      Home[]
  ContactUs ContactUs?
  AboutUs   AboutUs?
  Camp      Camp[]
  Blog      Blog[]
}

model Home {
  id          Int    @id @default(autoincrement())
  title       String @db.VarChar(255)
  description String
  photo       String
  title_photo String
  youtube_url String

  homeQuotes    homeQuotes[]
  travelQuotes  travelQuotes[]
  travelStories travelStories[]

  admin_id Int
  Admin    Admin @relation(fields: [admin_id], references: [id])
}

model homeQuotes {
  id    Int    @id @default(autoincrement())
  title String @db.VarChar(255)

  home_id Int
  Home    Home @relation(fields: [home_id], references: [id])
}

model travelQuotes {
  id    Int    @id @default(autoincrement())
  title String @db.VarChar(255)
  photo String

  home_id Int
  Home    Home @relation(fields: [home_id], references: [id])
}

model travelStories {
  id     Int    @id @default(autoincrement())
  review String
  photo  String

  home_id Int
  Home    Home @relation(fields: [home_id], references: [id])
}

model AboutUs {
  id          Int    @id @default(autoincrement())
  title       String @db.VarChar(255)
  description String
  photo       String

  admin_id Int
  Admin    Admin @relation(fields: [admin_id], references: [id])
}

model Blog {
  id          Int    @id @default(autoincrement())
  title       String @db.VarChar(255)
  photo       String
  tags        String
  description String

  admin_id Int
  Admin    Admin @relation(fields: [admin_id], references: [id])
}

model ContactUs {
  id       Int    @id @default(autoincrement())
  email_id String @unique
  phoneno  BigInt @db.BigInt
  insta_id String
  fb_id    String

  teamMember teamMember[]

  admin_id Int
  Admin    Admin @relation(fields: [admin_id], references: [id])
}

model teamMember {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(255)
  designation String
  photo       String

  contactUs_id Int
  contactUs    ContactUs @relation(fields: [contactUs_id], references: [id])
}

model Camp {
  id              Int     @id @default(autoincrement())
  title           String  @db.VarChar(255)
  photo           String?
  location        String?
  highlights      String?
  brochure        String?
  price           Float   @db.Real
  duration_day    Int
  duration_nights Int
  difficulty      String?
  distance        Int
  age_group       String?


  campDate        campDate[]
  packageName     packageName[]
  schedule        schedule[]
  campOtherDetail campOtherDetail[]
  campFaqs        campFaqs[]

  admin_id Int
  Admin    Admin @relation(fields: [admin_id], references: [id])
}

model campDate {
  id    Int      @id @default(autoincrement())
  start DateTime @db.Date
  end   DateTime @db.Date

  camp_id Int
  camp    Camp @relation(fields: [camp_id], references: [id])
}

model packageName {
  id            Int    @id @default(autoincrement())
  subpackage    String @db.VarChar(255)
  photo         String
  price         Float  @db.Real
  noday_nonight String

  camp_id Int
  camp    Camp @relation(fields: [camp_id], references: [id])
}

model schedule {
  id          Int     @id @default(autoincrement())
  dayno       Int
  day_title   String  @db.VarChar(255)
  description String?
  photo       String?

  camp_id Int
  camp    Camp @relation(fields: [camp_id], references: [id])
}

model campOtherDetail {
  id            Int      @id @default(autoincrement())
  inclusion     String[]
  exclusion     String[]
  cancel_policy String[]
  thing_cary    String[]

  camp_id Int
  camp    Camp @relation(fields: [camp_id], references: [id])
}

model campFaqs {
  id       Int     @id @default(autoincrement())
  question String?
  answer   String?

  camp_id Int
  camp    Camp @relation(fields: [camp_id], references: [id])
}
